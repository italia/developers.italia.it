# Javascript Node CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/reference-2-1/#section=configuration for more details

version: 2.1

references:
  working_directory: /tmp/developers

  load_image: &load_image
    docker:
      - image: cimg/ruby:2.6.5-node

  env_vars_test: &env_vars_test
    environment:
      - JEKYLL_ENV: "production"
      - NOKOGIRI_USE_SYSTEM_LIBRARIES: "true"
      - ELASTICSEARCH_URL: "" # Disable searchyll for test.

  env_vars_prod: &env_vars_prod
    environment:
      - JEKYLL_ENV: "production"
      - NOKOGIRI_USE_SYSTEM_LIBRARIES: "true"

  install_dependencies: &install_dependencies
    run:
      name: install-dependencies
      command: |
        make include-npm-deps
        make bundle-install-deployment
        sudo apt-get update && sudo apt install gawk libxss1 libx11-xcb1

  save_cache_yarn: &save_cache_yarn
    save_cache:
      key: v1-node-modules-{{ checksum "package-lock.json" }}
      paths:
        - node_modules

  save_cache_bundle: &save_cache_bundle
    save_cache:
      key: v2-bundle-{{ checksum "Gemfile.lock" }}
      paths:
        - /home/circleci/project/vendor/ruby

  restore_cache_yarn: &restore_cache_yarn
    restore_cache:
      keys:
        - v1-node-modules-{{ checksum "package-lock.json" }}
        - v1-node-modules-

  restore_cache_bundle: &restore_cache_bundle
    restore_cache:
      keys:
        - v2-bundle-{{ checksum "Gemfile.lock" }}
        - v2-bundle-

  get_crawler_yml_files: &get_crawler_yml_files
    run:
      name: get-crawler-yml-files
      command: |
        make download-data

  build_bundle_jekyll: &build_bundle_jekyll
    run:
      name: build-bundle-jekyll
      command: |
        make jekyll-build
        make test

  setup_ssh_gh_pages: &setup_ssh_gh_pages
    add_ssh_keys:
      fingerprints:
        # gh-pages deployment key from circle-ci config
        - bc:f0:e1:00:46:32:34:02:03:de:04:32:15:9b:0e:13

  publish_changes_gh_pages: &publish_changes_gh_pages
    run:
      name: publish_changes_gh_pages
      command: |
        cp -r .well-known _site/

        # Make GitHub skip its Jekyll support and serve all the files
        # we built with our own Jekyll. This includes dotfiles.
        touch _site/.nojekyll

        echo developers.italia.it > _site/CNAME
        npm run deploy -- --dotfiles -m "Automated deployment: ${CIRCLE_SHA1} [ci skip]"

  # In order to use this, the integration needs to be
  # setup first under CircleCI app directory and a
  # SLACK_WEBOOK environment variable needs to be set
  # in the project settings
  notify_on_failure: &notify_on_failure
    slack/status:
      fail_only: true
      only_for_branches: master

jobs:
  test:
    <<: *load_image
    <<: *env_vars_test
    steps:
      - checkout
      - << : *restore_cache_yarn
      - << : *restore_cache_bundle
      - << : *install_dependencies
      - << : *save_cache_yarn
      - << : *save_cache_bundle
      - << : *get_crawler_yml_files
      - run: make github-import
      - << : *build_bundle_jekyll
      - << : *notify_on_failure

  build_and_deploy_gh_pages:
    <<: *load_image
    <<: *env_vars_prod
    steps:
      - checkout
      - << : *restore_cache_yarn
      - << : *restore_cache_bundle
      - << : *install_dependencies
      - << : *save_cache_yarn
      - << : *save_cache_bundle
      - << : *get_crawler_yml_files
      - run: make github-import
      - << : *build_bundle_jekyll
      - << : *setup_ssh_gh_pages
      - << : *publish_changes_gh_pages
      - << : *notify_on_failure

orbs:
  slack: circleci/slack@3.4.2

workflows:
  # Every night, deploy to VMs and to gh-pages
  # to make sure latest data are shown
  daily-build-and-deploy:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_and_deploy_gh_pages
  # For any branch other than master,
  # run CI tests at each commit
  on-commit-test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
  # For each commit on the master branch
  # deploy to VMs and to gh-pages
  on-commit-build-and-deploy:
    jobs:
      - build_and_deploy_gh_pages:
          filters:
            branches:
              only:
                - master
